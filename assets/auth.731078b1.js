import{U as r,V as l,W as h,X as f}from"./index.1d1cb023.js";const i=r.has.webStorage===!1?l():h("session"),t={install({$q:s}){s.sessionStorage=i}};Object.assign(t,i);const a=()=>{const n=f("auth",{state:()=>({token:"",info:null,blocked:!1,region:null,connected:!1}),getters:{},actions:{setBlocked(o){this.blocked=o},setTokenInfo(o){this.info=o},loginRedirect(){},restorePath(){},init(){console.log(this),this.region=this.$region},setToken(o){this.region=this.$region,this.$connector.socket.off("error"),this.$connector.socket.on("error",e=>{e&&(e.code===2||e.code===135||e.code===134)&&(this.blocked=!1),e&&(e.code===138||e.code===151)&&(this.blocked=!0),this.connected=!1}),this.$connector.socket.off("close"),this.$connector.socket.on("close",e=>{console.log("Close MQTT"),this.connected=!1}),this.$connector.socket.off("disconnect"),this.$connector.socket.on("disconnect",e=>{console.log("Disconnect MQTT"),this.connected=!1}),this.$connector.socket.off("end"),this.$connector.socket.on("end",e=>{console.log("End MQTT"),this.connected=!1}),this.$connector.socket.off("connect"),this.$connector.socket.on("connect",e=>{console.log("Connected MQTT"),this.info=JSON.parse(e.properties.userProperties.token),this.blocked=!1,this.connected=!0}),o.length===0?(console.log("Logout setToken"),t.remove("token"),this.token="",this.$connector.socket.end()):(o.indexOf("FlespiToken")>=0?(this.$connector.token=o,this.token=o):(this.$connector.token=`FlespiToken ${o}`,this.token=o),t.set("token",this.token),console.log(this.$connector.auth.getInfo().then(e=>{console.log(e)})))}}})(),c=t.getItem("token");return c&&!n.token&&n.setToken(c),n};export{a as u};
